{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dylan Karrass\\\\Desktop\\\\harmonize\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi();\nconst getTokenFromUrl = () => {\n  return window.location.hash.substring(1).split('&').reduce((initial, item) => {\n    let parts = item.split('=');\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n    return initial;\n  }, {});\n};\nfunction App() {\n  _s();\n  const [spotifyToken, setSpotifyToken] = useState(\"\");\n  const [refreshToken, setRefreshToken] = useState(\"\");\n  const [expiresIn, setExpiresIn] = useState(0);\n  const [nowPlaying, setNowPlaying] = useState({});\n  const [loggedIn, setLoggedIn] = useState(false);\n  useEffect(() => {\n    console.log(\"This is what we got from the URL: \", getTokenFromUrl());\n    const spotifyToken = getTokenFromUrl().access_token;\n    const refreshToken = getTokenFromUrl().refresh_token;\n    const expiresIn = getTokenFromUrl().expires_in;\n    window.location.hash = \"\";\n    console.log(\"This is our spotify token: \", spotifyToken);\n    console.log(\"This is our refresh token: \", refreshToken);\n    console.log(\"This is the expiresIn: \", expiresIn);\n    if (spotifyToken) {\n      setSpotifyToken(spotifyToken);\n      setRefreshToken(refreshToken);\n      setExpiresIn(expiresIn);\n      spotifyApi.setAccessToken(spotifyToken);\n      spotifyApi.getMe().then(user => {\n        console.log(user);\n      });\n      setLoggedIn(true);\n    }\n  });\n  useEffect(() => {\n    if (!refreshToken || !expiresIn) return;\n    console.log(\"Setting up interval to refresh token\");\n    const interval = setInterval(() => {\n      console.log(\"Refreshing token\");\n      axios.get('http://localhost:8888/refresh_token', {\n        params: {\n          refresh_token: refreshToken\n        }\n      }).then(response => {\n        const {\n          access_token\n        } = response.data;\n        console.log(`Token refreshed: ${access_token}`); // Log the new token\n        setSpotifyToken(access_token);\n        spotifyApi.setAccessToken(access_token);\n      }).catch(err => {\n        console.error(err);\n        // Handle error, e.g., by logging out the user\n      });\n    }, (expiresIn - 60) * 1000); // Refresh 1 minute before token expires\n\n    return () => clearInterval(interval); // Cleanup interval on component unmount\n  }, [refreshToken, expiresIn]); // This effect runs when refreshToken or expiresIn changes\n\n  const getNowPlaying = () => {\n    spotifyApi.getMyCurrentPlaybackState().then(response => {\n      console.log(\"Got response: \", response);\n      setNowPlaying({\n        name: response.item.name,\n        albumArt: response.item.album.images[0].url\n      });\n    }).catch(err => {\n      console.log(\"Error getting current playback state: \", err);\n      setNowPlaying({\n        name: \"No song playing\",\n        albumArt: \"\"\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!loggedIn && /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"btn btn-success btn-lg\",\n        href: \"http://localhost:8888/login\",\n        children: \"Login to spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }, this), loggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Now Playing: \", nowPlaying.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: nowPlaying.albumArt,\n          style: {\n            height: 150\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), loggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getNowPlaying(),\n      children: \"Check Now Playing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0Bqblg/oGS0ntdnt6e6Iii/uT7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Container","SpotifyWebApi","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","spotifyApi","getTokenFromUrl","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","App","_s","spotifyToken","setSpotifyToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","nowPlaying","setNowPlaying","loggedIn","setLoggedIn","console","log","access_token","refresh_token","expires_in","setAccessToken","getMe","then","user","interval","setInterval","get","params","response","data","catch","err","error","clearInterval","getNowPlaying","getMyCurrentPlaybackState","name","albumArt","album","images","url","className","children","style","minHeight","href","fileName","_jsxFileName","lineNumber","columnNumber","src","height","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dylan Karrass/Desktop/harmonize/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport axios from 'axios';\n\nconst spotifyApi = new SpotifyWebApi();\n\nconst getTokenFromUrl = () => {\n  return window.location.hash.substring(1).split('&').reduce((initial, item) => {\n    let parts = item.split('=');\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n    return initial\n  }, {});\n}\n\nfunction App() {\n  const [spotifyToken, setSpotifyToken] = useState(\"\");\n  const [refreshToken, setRefreshToken] = useState(\"\");\n  const [expiresIn, setExpiresIn] = useState(0);\n  const [nowPlaying, setNowPlaying] = useState({});\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  useEffect(() => {\n    console.log(\"This is what we got from the URL: \", getTokenFromUrl());\n    const spotifyToken = getTokenFromUrl().access_token;\n    const refreshToken = getTokenFromUrl().refresh_token;\n    const expiresIn = getTokenFromUrl().expires_in;\n    window.location.hash = \"\";\n    console.log(\"This is our spotify token: \", spotifyToken);\n    console.log(\"This is our refresh token: \", refreshToken);\n    console.log(\"This is the expiresIn: \", expiresIn);\n\n    if (spotifyToken) {\n      setSpotifyToken(spotifyToken);\n      setRefreshToken(refreshToken);\n      setExpiresIn(expiresIn);\n      spotifyApi.setAccessToken(spotifyToken);\n      spotifyApi.getMe().then((user) => {\n        console.log(user);\n      });\n      setLoggedIn(true);\n    }\n  })\n\n  useEffect(() => {\n    if (!refreshToken || !expiresIn) return;\n    console.log(\"Setting up interval to refresh token\");\n    const interval = setInterval(() => {\n      console.log(\"Refreshing token\");\n      axios.get('http://localhost:8888/refresh_token', {\n        params: {\n          refresh_token: refreshToken\n        }\n      })\n      .then(response => {\n        const { access_token } = response.data;\n        console.log(`Token refreshed: ${access_token}`); // Log the new token\n        setSpotifyToken(access_token);\n        spotifyApi.setAccessToken(access_token);\n      })\n      .catch(err => {\n        console.error(err);\n        // Handle error, e.g., by logging out the user\n      });\n    }, (expiresIn - 60) * 1000); // Refresh 1 minute before token expires\n\n    return () => clearInterval(interval); // Cleanup interval on component unmount\n  }, [refreshToken, expiresIn]); // This effect runs when refreshToken or expiresIn changes\n\n  const getNowPlaying = () => {\n    spotifyApi.getMyCurrentPlaybackState()\n      .then((response) => {\n        console.log(\"Got response: \", response);\n        setNowPlaying({\n          name: response.item.name,\n          albumArt: response.item.album.images[0].url})\n      }).catch((err) => {\n        console.log(\"Error getting current playback state: \", err);\n        setNowPlaying({\n          name: \"No song playing\",\n          albumArt: \"\"\n        })\n      })\n  }\n\n  return (\n    <div className=\"App\">\n      {!loggedIn && <Container className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: \"100vh\" }}>\n        <a className=\"btn btn-success btn-lg\" href=\"http://localhost:8888/login\">Login to spotify</a>\n        </Container>}\n      {loggedIn && (\n        <>\n          <div>Now Playing: {nowPlaying.name}</div>\n          <div>\n            <img src={nowPlaying.albumArt} style={{ height: 150 }} />\n          </div>\n        </>\n      )}\n      {loggedIn && (\n        <button onClick={() => getNowPlaying()}>\n          Check Now Playing\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}