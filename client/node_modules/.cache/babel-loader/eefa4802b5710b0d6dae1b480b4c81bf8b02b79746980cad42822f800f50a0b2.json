{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dylan Karrass\\\\Desktop\\\\harmonize\\\\client\\\\src\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MessageContext } from './MessageContext'; // Make sure the path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatRoom() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const {\n    currentConversation,\n    sendMessage\n  } = useContext(MessageContext);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const messagesEndRef = useRef(null);\n\n  // Auto-scroll to the latest message only when a new message is added to the conversation\n  useEffect(() => {\n    if ((currentConversation === null || currentConversation === void 0 ? void 0 : currentConversation.messages.length) > 0) {\n      var _messagesEndRef$curre;\n      (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [currentConversation === null || currentConversation === void 0 ? void 0 : currentConversation.messages.length]);\n  const handleSendMessage = () => {\n    if (newMessage.trim() !== \"\") {\n      sendMessage({\n        message: newMessage,\n        to: userId\n      });\n      setNewMessage(\"\");\n    }\n  };\n  if (!currentConversation) {\n    // If no current conversation, display a friendly message\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"middle-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No Conversation Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select a conversation to start chatting.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"middle-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Chat with \", currentConversation.userDisplayName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [currentConversation.messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value),\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatRoom, \"nztb4Jc2CY1aGmtjc3i1yB25ONk=\", false, function () {\n  return [useParams];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useRef","useParams","MessageContext","jsxDEV","_jsxDEV","ChatRoom","_s","userId","currentConversation","sendMessage","newMessage","setNewMessage","messagesEndRef","messages","length","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","message","to","className","children","fileName","_jsxFileName","lineNumber","columnNumber","userDisplayName","map","msg","index","ref","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dylan Karrass/Desktop/harmonize/client/src/ChatRoom.js"],"sourcesContent":["import React, { useContext, useEffect, useState, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { MessageContext } from './MessageContext';  // Make sure the path is correct\r\n\r\nfunction ChatRoom() {\r\n    const { userId } = useParams();\r\n    const { currentConversation, sendMessage } = useContext(MessageContext);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const messagesEndRef = useRef(null);\r\n\r\n    // Auto-scroll to the latest message only when a new message is added to the conversation\r\n    useEffect(() => {\r\n        if (currentConversation?.messages.length > 0) {\r\n            messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    }, [currentConversation?.messages.length]);\r\n\r\n    const handleSendMessage = () => {\r\n        if (newMessage.trim() !== \"\") {\r\n            sendMessage({ message: newMessage, to: userId });\r\n            setNewMessage(\"\");\r\n        }\r\n    };\r\n\r\n    if (!currentConversation) {\r\n        // If no current conversation, display a friendly message\r\n        return (\r\n            <div className=\"middle-content\">\r\n                <h1>No Conversation Selected</h1>\r\n                <p>Please select a conversation to start chatting.</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"middle-content\">\r\n            <h1>Chat with {currentConversation.userDisplayName}</h1>\r\n            <div className=\"messages\">\r\n                {currentConversation.messages.map((msg, index) => (\r\n                    <p key={index}>{msg}</p>\r\n                ))}\r\n                <div ref={messagesEndRef} />\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n                placeholder=\"Type a message...\"\r\n            />\r\n            <button onClick={handleSendMessage}>Send</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}