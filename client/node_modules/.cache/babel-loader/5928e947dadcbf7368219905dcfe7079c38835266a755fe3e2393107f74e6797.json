{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dylan Karrass\\\\Desktop\\\\harmonize\\\\client\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Container, Form, Button, InputGroup } from \"react-bootstrap\";\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from \"./Player\";\nimport TrackSearchResult from \"./TrackSearchResult\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard({\n  spotifyApi,\n  spotifyToken\n}) {\n  _s();\n  const [isExpanded, setIsExpanded] = useState(false); // State to track whether the dashboard is expanded\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [nowPlaying, setNowPlaying] = useState();\n  function chooseTrack(track) {\n    setNowPlaying(track);\n  }\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!spotifyToken) return;\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      setSearchResults(res.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      }));\n    });\n    return () => cancel = true;\n  }, [search, spotifyToken]);\n  const getHeight = () => {\n    if (isExpanded && searchResults.length > 0) return '800px'; // Expanded height\n    if (searchResults.length > 0) return '250px';\n    return '150px'; // Default height\n  };\n\n  // Dynamic styles based on whether the dashboard is expanded or not\n  // const dashboardStyle = {\n  //     position: 'fixed',\n  //     bottom: '20px',\n  //     right: '20px',\n  //     width: '600px',\n  //     height: getHeight(),\n  //     overflow: 'hidden',\n  //     transition: 'width 0.5s, height 0.5s',\n  //     borderRadius: '10px',\n  //     boxShadow: '0 4px 8px rgba(0,0,0,0.5)',\n  //     cursor: 'pointer', // Make it obvious it's interactive\n  // };\n\n  const styles = {\n    dashboard: {\n      position: 'fixed',\n      bottom: '20px',\n      right: '20px',\n      width: 'calc(100% - 40px)',\n      // Adjust width to be responsive\n      maxWidth: '600px',\n      // Max width can still be 600px\n      transition: 'height 0.5s',\n      borderRadius: '10px',\n      boxShadow: '0 4px 8px rgba(0,0,0,0.5)',\n      cursor: 'pointer'\n    },\n    inputGroup: {\n      width: '100%' // Ensure input group takes full width of its container\n    },\n    clearButton: {\n      marginLeft: '10px' // Add some space between the search bar and the button\n    }\n  };\n\n  // return (\n  //     <Container\n  //         className=\"d-flex flex-column py-2\"\n  //         style={dashboardStyle}\n  //         onMouseEnter={() => setIsExpanded(true)}\n  //         onMouseLeave={() => setIsExpanded(false)}\n  //     >\n  //         <InputGroup>\n  //             <Form.Control \n  //                 type=\"text\" \n  //                 placeholder=\"Search Songs/Artists\" \n  //                 value={search}\n  //                 onChange={e => setSearch(e.target.value)} \n  //             />\n  //             <Button variant=\"outline-secondary\" onClick={() => { setSearch(''); setSearchResults([]); }}>\n  //                 Clear\n  //             </Button>\n  //         </InputGroup>\n  //         <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\n  //             {searchResults.map(track => (\n  //                 <TrackSearchResult track={track} key={track.uri} chooseTrack={chooseTrack} />\n  //             ))}\n  //         </div>\n  //         <Player spotifyToken={spotifyToken} trackUri={nowPlaying?.uri} />\n  //     </Container>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column py-2\",\n    style: {\n      ...styles.dashboard,\n      height: getHeight() // Function to determine height remains unchanged\n    },\n    onMouseEnter: () => setIsExpanded(true),\n    onMouseLeave: () => setIsExpanded(false),\n    children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n      style: styles.inputGroup,\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Search Songs/Artists\",\n        value: search,\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-secondary\",\n        style: styles.clearButton,\n        onClick: () => {\n          setSearch('');\n          setSearchResults([]);\n        },\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResult, {\n        track: track,\n        chooseTrack: chooseTrack\n      }, track.uri, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      spotifyToken: spotifyToken,\n      trackUri: nowPlaying === null || nowPlaying === void 0 ? void 0 : nowPlaying.uri\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"oFqlwFQwuZxAaE4iY0odcoq4pZw=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","Container","Form","Button","InputGroup","SpotifyWebApi","Player","TrackSearchResult","jsxDEV","_jsxDEV","Dashboard","spotifyApi","spotifyToken","_s","isExpanded","setIsExpanded","search","setSearch","searchResults","setSearchResults","nowPlaying","setNowPlaying","chooseTrack","track","cancel","searchTracks","then","res","tracks","items","map","smallestAlbumImage","album","images","reduce","smallest","image","height","artist","artists","name","title","uri","albumUrl","url","getHeight","length","styles","dashboard","position","bottom","right","width","maxWidth","transition","borderRadius","boxShadow","cursor","inputGroup","clearButton","marginLeft","className","style","onMouseEnter","onMouseLeave","children","Control","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","overflowY","trackUri","_c","$RefreshReg$"],"sources":["C:/Users/Dylan Karrass/Desktop/harmonize/client/src/Dashboard.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Container, Form, Button, InputGroup } from \"react-bootstrap\";\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport Player from \"./Player\";\r\nimport TrackSearchResult from \"./TrackSearchResult\";\r\n\r\nexport default function Dashboard({ spotifyApi, spotifyToken }) {\r\n    const [isExpanded, setIsExpanded] = useState(false); // State to track whether the dashboard is expanded\r\n    const [search, setSearch] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [nowPlaying, setNowPlaying] = useState();\r\n\r\n    function chooseTrack(track) {\r\n        setNowPlaying(track);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!search) return setSearchResults([]);\r\n        if (!spotifyToken) return;\r\n        \r\n        let cancel = false;\r\n        spotifyApi.searchTracks(search).then(res => {\r\n            if (cancel) return;\r\n            setSearchResults(res.tracks.items.map(track => {\r\n                const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\r\n                    if (image.height < smallest.height) return image;\r\n                    return smallest;\r\n                }, track.album.images[0]);\r\n\r\n                return {\r\n                    artist: track.artists[0].name,\r\n                    title: track.name,\r\n                    uri: track.uri,\r\n                    albumUrl: smallestAlbumImage.url\r\n                };\r\n            }));\r\n        });\r\n        return () => cancel = true;\r\n    }, [search, spotifyToken]);\r\n\r\n    const getHeight = () => {\r\n        if (isExpanded && searchResults.length > 0) return '800px'; // Expanded height\r\n        if(searchResults.length > 0) return '250px';\r\n        return '150px'; // Default height\r\n    };\r\n\r\n    // Dynamic styles based on whether the dashboard is expanded or not\r\n    // const dashboardStyle = {\r\n    //     position: 'fixed',\r\n    //     bottom: '20px',\r\n    //     right: '20px',\r\n    //     width: '600px',\r\n    //     height: getHeight(),\r\n    //     overflow: 'hidden',\r\n    //     transition: 'width 0.5s, height 0.5s',\r\n    //     borderRadius: '10px',\r\n    //     boxShadow: '0 4px 8px rgba(0,0,0,0.5)',\r\n    //     cursor: 'pointer', // Make it obvious it's interactive\r\n    // };\r\n\r\n    const styles = {\r\n        dashboard: {\r\n            position: 'fixed',\r\n            bottom: '20px',\r\n            right: '20px',\r\n            width: 'calc(100% - 40px)', // Adjust width to be responsive\r\n            maxWidth: '600px', // Max width can still be 600px\r\n            transition: 'height 0.5s',\r\n            borderRadius: '10px',\r\n            boxShadow: '0 4px 8px rgba(0,0,0,0.5)',\r\n            cursor: 'pointer',\r\n        },\r\n        inputGroup: {\r\n            width: '100%', // Ensure input group takes full width of its container\r\n        },\r\n        clearButton: {\r\n            marginLeft: '10px', // Add some space between the search bar and the button\r\n        },\r\n    };\r\n\r\n    // return (\r\n    //     <Container\r\n    //         className=\"d-flex flex-column py-2\"\r\n    //         style={dashboardStyle}\r\n    //         onMouseEnter={() => setIsExpanded(true)}\r\n    //         onMouseLeave={() => setIsExpanded(false)}\r\n    //     >\r\n    //         <InputGroup>\r\n    //             <Form.Control \r\n    //                 type=\"text\" \r\n    //                 placeholder=\"Search Songs/Artists\" \r\n    //                 value={search}\r\n    //                 onChange={e => setSearch(e.target.value)} \r\n    //             />\r\n    //             <Button variant=\"outline-secondary\" onClick={() => { setSearch(''); setSearchResults([]); }}>\r\n    //                 Clear\r\n    //             </Button>\r\n    //         </InputGroup>\r\n    //         <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\r\n    //             {searchResults.map(track => (\r\n    //                 <TrackSearchResult track={track} key={track.uri} chooseTrack={chooseTrack} />\r\n    //             ))}\r\n    //         </div>\r\n    //         <Player spotifyToken={spotifyToken} trackUri={nowPlaying?.uri} />\r\n    //     </Container>\r\n    // );\r\n\r\n    return (\r\n        <Container\r\n            className=\"d-flex flex-column py-2\"\r\n            style={{\r\n                ...styles.dashboard,\r\n                height: getHeight(), // Function to determine height remains unchanged\r\n            }}\r\n            onMouseEnter={() => setIsExpanded(true)}\r\n            onMouseLeave={() => setIsExpanded(false)}\r\n        >\r\n            <InputGroup style={styles.inputGroup}>\r\n                <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Search Songs/Artists\" \r\n                    value={search}\r\n                    onChange={e => setSearch(e.target.value)} \r\n                />\r\n                <Button variant=\"outline-secondary\" style={styles.clearButton} onClick={() => { setSearch(''); setSearchResults([]); }}>\r\n                    Clear\r\n                </Button>\r\n            </InputGroup>\r\n            <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\r\n                {searchResults.map(track => (\r\n                    <TrackSearchResult track={track} key={track.uri} chooseTrack={chooseTrack} />\r\n                ))}\r\n            </div>\r\n            <Player spotifyToken={spotifyToken} trackUri={nowPlaying?.uri} />\r\n        </Container>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}