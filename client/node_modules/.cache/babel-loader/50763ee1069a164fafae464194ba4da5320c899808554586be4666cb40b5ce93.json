{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dylan Karrass\\\\Desktop\\\\spotifyapp\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi();\nconst getTokenFromUrl = () => {\n  return window.location.hash.substring(1).split('&').reduce((initial, item) => {\n    let parts = item.split('=');\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n    return initial;\n  }, {});\n};\nfunction App() {\n  _s();\n  const [spotifyToken, setSpotifyToken] = useState(\"\");\n  const [nowPlaying, setNowPlaying] = useState({});\n  const [loggedIn, setLoggedIn] = useState(false);\n  useEffect(() => {\n    console.log(\"Got from url: \".getTokenFromUrl());\n    const spotifyToken = getTokenFromUrl().access_token;\n    window.location.hash = \"\";\n    console.log(\"Got token: \", spotifyToken);\n    if (spotifyToken) {\n      setSpotifyToken(spotifyToken);\n      spotifyApi.setAccessToken(spotifyToken);\n      setLoggedIn(true);\n    }\n  });\n  const getNowPlaying = () => {\n    spotifyApi.getMyCurrentPlaybackState().then(response => {\n      console.log(\"Got response: \", response);\n      setNowPlaying({\n        name: response.item.name,\n        albumArt: response.item.album.images[0].url\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!loggedIn && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"http://localhost:8888\",\n      children: \"Login to spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }, this), loggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Now Playing: \", nowPlaying.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: nowPlaying.albumArt,\n          style: {\n            height: 150\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), loggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getNowPlaying(),\n      children: \"Check Now Playing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K6UAWAbTUrQtoiXfCVJjuIYvqQs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useEffect","useState","SpotifyWebApi","jsxDEV","_jsxDEV","Fragment","_Fragment","spotifyApi","getTokenFromUrl","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","App","_s","spotifyToken","setSpotifyToken","nowPlaying","setNowPlaying","loggedIn","setLoggedIn","console","log","access_token","setAccessToken","getNowPlaying","getMyCurrentPlaybackState","then","response","name","albumArt","album","images","url","className","children","href","fileName","_jsxFileName","lineNumber","columnNumber","src","style","height","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dylan Karrass/Desktop/spotifyapp/client/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\n\nconst spotifyApi = new SpotifyWebApi();\n\nconst getTokenFromUrl = () => {\n  return window.location.hash.substring(1).split('&').reduce((initial, item) => {\n    let parts = item.split('=');\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n    return initial\n  }, {});\n}\n\nfunction App() {\n  const [spotifyToken, setSpotifyToken] = useState(\"\");\n  const [nowPlaying, setNowPlaying] = useState({});\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  useEffect(() => {\n    console.log(\"Got from url: \". getTokenFromUrl());\n    const spotifyToken = getTokenFromUrl().access_token;\n    window.location.hash = \"\";\n    console.log(\"Got token: \", spotifyToken);\n\n    if (spotifyToken) {\n      setSpotifyToken(spotifyToken);\n      spotifyApi.setAccessToken(spotifyToken);\n      setLoggedIn(true);\n    }\n  })\n\n  const getNowPlaying = () => {\n    spotifyApi.getMyCurrentPlaybackState()\n      .then((response) => {\n        console.log(\"Got response: \", response);\n        setNowPlaying({\n          name: response.item.name,\n          albumArt: response.item.album.images[0].url});\n      })\n  }\n\n  return (\n    <div className=\"App\">\n      {!loggedIn && <a href=\"http://localhost:8888\">Login to spotify</a>}\n      {loggedIn && (\n        <>\n          <div>Now Playing: {nowPlaying.name}</div>\n          <div>\n            <img src={nowPlaying.albumArt} style={{ height: 150 }} />\n          </div>\n        </>\n      )}\n      {loggedIn && (\n        <button onClick={() => getNowPlaying()}>\n          Check Now Playing\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}