{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dylan Karrass\\\\Desktop\\\\harmonize\\\\client\\\\src\\\\ProfilePage.js\",\n  _s = $RefreshSig$();\n// Import React utilities and hooks, React Router utilities for navigation, Axios for HTTP requests, and React Bootstrap components.\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { MessageContext } from './MessageContext';\nimport axios from 'axios';\nimport { Container, Card, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProfilePage({\n  userProfile,\n  spotifyToken\n}) {\n  _s();\n  // Retrieve display name from the URL parameters.\n  const {\n    displayName\n  } = useParams();\n  // Access the MessageContext for conversation management.\n  const {\n    startConversation\n  } = useContext(MessageContext);\n  // useNavigate hook for programmatically navigating to other routes.\n  const navigate = useNavigate();\n  // Local state to manage user data and posts.\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState('');\n  const [isFollowing, setIsFollowing] = useState(false); // State to manage follow status.\n\n  // Effect hook to fetch user data and related posts on component mount and when displayName changes.\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8888/users/search/${displayName}`);\n        if (response.data.length > 0) {\n          const userData = response.data[0];\n          setUser(userData);\n          setIsFollowing(userData.followers.includes(userProfile.userId));\n          fetchPostsByDisplayName(displayName); // Fetch posts of the user.\n        } else {\n          setError('User not found');\n        }\n      } catch (err) {\n        setError('Failed to fetch user data');\n        console.error(err);\n      }\n    };\n    fetchUserData();\n  }, [displayName, userProfile.userId]);\n\n  // Function to fetch posts by a specific user.\n  const fetchPostsByDisplayName = displayName => {\n    axios.get(`http://localhost:8888/posts`, {\n      params: {\n        search: displayName\n      }\n    }).then(response => {\n      setPosts(response.data);\n    }).catch(err => {\n      console.error('Error fetching posts:', err);\n      setError('Failed to fetch posts');\n    });\n  };\n\n  // Function to render individual posts.\n  const renderPosts = () => {\n    return posts.map(post => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: post.user.profileImage || 'https://via.placeholder.com/150',\n              alt: \"Profile\",\n              className: \"post-profile-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: post.user.displayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tag-section\",\n            children: [post.tags.artist && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tag\",\n              children: [\"Artist: \", post.tags.artist]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 50\n            }, this), post.tags.song && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tag\",\n              children: [\"Song: \", post.tags.song]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 48\n            }, this), post.tags.album && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tag\",\n              children: [\"Album: \", post.tags.album]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this));\n  };\n\n  // Function to start a new conversation.\n  const handleSendMessage = () => {\n    const otherUserId = user._id;\n    const currentUserId = userProfile.userId;\n    fetch('http://localhost:8888/api/conversations/start', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        currentUserId,\n        otherUserId\n      })\n    }).then(response => response.json()).then(conversation => {\n      navigate(`/chat/${conversation._id}`);\n    }).catch(error => {\n      console.error('Error starting conversation:', error);\n      alert('Failed to start conversation');\n    });\n  };\n\n  // Render error state.\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"middle-content\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 54\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Function to follow a user.\n  const followUser = async () => {\n    if (!userProfile || userProfile.userId === user._id) {\n      alert(\"You cannot follow yourself.\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:8888/users/${user._id}/follow`, {\n        userId: userProfile.userId\n      });\n      if (response.status === 200) {\n        setIsFollowing(true);\n        setUser(prev => ({\n          ...prev,\n          followers: [...prev.followers, userProfile.userId]\n        }));\n        alert(\"You are now following \" + user.displayName);\n      } else {\n        alert(\"Failed to follow: \" + response.data.message);\n      }\n    } catch (error) {\n      console.error(\"Error following user: \", error.response ? error.response.data.message : error.message);\n      alert(\"Failed to follow due to an error.\");\n    }\n  };\n\n  // Function to unfollow a user.\n  const unfollowUser = async userIdToUnfollow => {\n    await axios.post(`http://localhost:8888/users/${userIdToUnfollow}/unfollow`, {\n      userId: userProfile.userId\n    }).then(() => {\n      setIsFollowing(false);\n      setUser(prev => ({\n        ...prev,\n        followers: prev.followers.filter(id => id !== userProfile.userId)\n      }));\n      alert(\"You have unfollowed \" + user.displayName);\n    }).catch(error => {\n      console.log(\"Error unfollowing user: \" + error);\n      alert(\"Failed to unfollow\");\n    });\n  };\n\n  // Render user profile and posts.\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"middle-content\",\n    children: user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [user.displayName, \" - Followers: \", user.followers.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.profileImage || 'https://via.placeholder.com/150',\n        alt: `${user.displayName}`,\n        style: {\n          borderRadius: '50%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this), userProfile.userId !== user._id && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSendMessage,\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 29\n        }, this), isFollowing ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => unfollowUser(user._id),\n          children: \"Unfollow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: followUser,\n          children: \"Follow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true), renderPosts()]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading user profile...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n}\n_s(ProfilePage, \"Lblf7WEBK6BsrKjJ39WZWbiJ9ZU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useNavigate","useParams","MessageContext","axios","Container","Card","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfilePage","userProfile","spotifyToken","_s","displayName","startConversation","navigate","user","setUser","posts","setPosts","error","setError","isFollowing","setIsFollowing","fetchUserData","response","get","data","length","userData","followers","includes","userId","fetchPostsByDisplayName","err","console","params","search","then","catch","renderPosts","map","post","className","children","Body","src","profileImage","alt","fileName","_jsxFileName","lineNumber","columnNumber","tags","artist","song","album","Text","content","_id","handleSendMessage","otherUserId","currentUserId","fetch","method","headers","body","JSON","stringify","json","conversation","alert","followUser","status","prev","message","unfollowUser","userIdToUnfollow","filter","id","log","style","borderRadius","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dylan Karrass/Desktop/harmonize/client/src/ProfilePage.js"],"sourcesContent":["// Import React utilities and hooks, React Router utilities for navigation, Axios for HTTP requests, and React Bootstrap components.\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { MessageContext } from './MessageContext';\r\nimport axios from 'axios';\r\nimport { Container, Card, Button } from 'react-bootstrap';\r\n\r\nfunction ProfilePage({ userProfile, spotifyToken }) {\r\n    // Retrieve display name from the URL parameters.\r\n    const { displayName } = useParams();\r\n    // Access the MessageContext for conversation management.\r\n    const { startConversation } = useContext(MessageContext);\r\n    // useNavigate hook for programmatically navigating to other routes.\r\n    const navigate = useNavigate();\r\n    // Local state to manage user data and posts.\r\n    const [user, setUser] = useState(null);\r\n    const [posts, setPosts] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [isFollowing, setIsFollowing] = useState(false);  // State to manage follow status.\r\n\r\n    // Effect hook to fetch user data and related posts on component mount and when displayName changes.\r\n    useEffect(() => {\r\n        const fetchUserData = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8888/users/search/${displayName}`);\r\n                if (response.data.length > 0) {\r\n                    const userData = response.data[0];\r\n                    setUser(userData);\r\n                    setIsFollowing(userData.followers.includes(userProfile.userId));\r\n                    fetchPostsByDisplayName(displayName);  // Fetch posts of the user.\r\n                } else {\r\n                    setError('User not found');\r\n                }\r\n            } catch (err) {\r\n                setError('Failed to fetch user data');\r\n                console.error(err);\r\n            }\r\n        };\r\n        fetchUserData();\r\n    }, [displayName, userProfile.userId]);\r\n\r\n    // Function to fetch posts by a specific user.\r\n    const fetchPostsByDisplayName = (displayName) => {\r\n        axios.get(`http://localhost:8888/posts`, { params: { search: displayName } })\r\n            .then(response => {\r\n                setPosts(response.data);\r\n            })\r\n            .catch(err => {\r\n                console.error('Error fetching posts:', err);\r\n                setError('Failed to fetch posts');\r\n            });\r\n    };\r\n\r\n    // Function to render individual posts.\r\n    const renderPosts = () => {\r\n        return posts.map((post) => (\r\n            <Card key={post._id} className=\"mb-3\">\r\n                <Card.Body>\r\n                    <div className=\"post-header\">\r\n                        <div className=\"user-info\">\r\n                            <img src={post.user.profileImage || 'https://via.placeholder.com/150'} alt=\"Profile\" className=\"post-profile-image\" />\r\n                            <div>{post.user.displayName}</div>\r\n                        </div>\r\n                        <div className=\"tag-section\">\r\n                            {post.tags.artist && <div className=\"tag\">Artist: {post.tags.artist}</div>}\r\n                            {post.tags.song && <div className=\"tag\">Song: {post.tags.song}</div>}\r\n                            {post.tags.album && <div className=\"tag\">Album: {post.tags.album}</div>}\r\n                        </div>\r\n                    </div>\r\n                    <Card.Text>{post.content}</Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        ));\r\n    };\r\n\r\n    // Function to start a new conversation.\r\n    const handleSendMessage = () => {\r\n        const otherUserId = user._id;\r\n        const currentUserId = userProfile.userId;\r\n        fetch('http://localhost:8888/api/conversations/start', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ currentUserId, otherUserId })\r\n        })\r\n        .then(response => response.json())\r\n        .then(conversation => {\r\n            navigate(`/chat/${conversation._id}`);\r\n        })\r\n        .catch(error => {\r\n            console.error('Error starting conversation:', error);\r\n            alert('Failed to start conversation');\r\n        });\r\n    };\r\n\r\n    // Render error state.\r\n    if (error) {\r\n        return <Container className=\"middle-content\"><p>{error}</p></Container>;\r\n    }\r\n\r\n    // Function to follow a user.\r\n    const followUser = async () => {\r\n        if (!userProfile || userProfile.userId === user._id) {\r\n          alert(\"You cannot follow yourself.\");\r\n          return;\r\n        }\r\n        try {\r\n          const response = await axios.post(`http://localhost:8888/users/${user._id}/follow`, { userId: userProfile.userId });\r\n          if (response.status === 200) {\r\n            setIsFollowing(true);\r\n            setUser(prev => ({\r\n              ...prev,\r\n              followers: [...prev.followers, userProfile.userId]\r\n            }));\r\n            alert(\"You are now following \" + user.displayName);\r\n          } else {\r\n            alert(\"Failed to follow: \" + response.data.message);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error following user: \", error.response ? error.response.data.message : error.message);\r\n          alert(\"Failed to follow due to an error.\");\r\n        }\r\n      };\r\n\r\n    // Function to unfollow a user.\r\n    const unfollowUser = async (userIdToUnfollow) => {\r\n        await axios.post(`http://localhost:8888/users/${userIdToUnfollow}/unfollow`, { userId: userProfile.userId })\r\n            .then(() => {\r\n                setIsFollowing(false);\r\n                setUser(prev => ({\r\n                    ...prev,\r\n                    followers: prev.followers.filter(id => id !== userProfile.userId)\r\n                }));\r\n                alert(\"You have unfollowed \" + user.displayName);\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error unfollowing user: \" + error);\r\n                alert(\"Failed to unfollow\");\r\n            });\r\n    };\r\n\r\n    // Render user profile and posts.\r\n    return (\r\n        <Container className=\"middle-content\">\r\n            {user ? (\r\n                <>\r\n                    <h1>{user.displayName} - Followers: {user.followers.length}</h1>\r\n                    <img src={user.profileImage || 'https://via.placeholder.com/150'} alt={`${user.displayName}`} style={{ borderRadius: '50%' }} />\r\n                    {userProfile.userId !== user._id && (\r\n                        <>\r\n                            <Button onClick={handleSendMessage}>Message</Button>\r\n                            {isFollowing ? (\r\n                                <Button onClick={() => unfollowUser(user._id)}>Unfollow</Button>\r\n                            ) : (\r\n                                <Button onClick={followUser}>Follow</Button>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                    {renderPosts()}\r\n                </>\r\n            ) : (\r\n                <p>Loading user profile...</p>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}