{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dylan Karrass\\\\Desktop\\\\harmonize\\\\client\\\\src\\\\FeedPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Form, Button, Card } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FeedPage({\n  userProfile\n}) {\n  _s();\n  const [content, setContent] = useState('');\n  const [tags, setTags] = useState({\n    artist: '',\n    song: '',\n    album: ''\n  });\n  const [posts, setPosts] = useState([]); // State to store fetched posts\n\n  // Fetch posts from backend when component mounts\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get('http://localhost:8888/posts');\n        setPosts(response.data); // Set fetched posts to state\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    fetchPosts();\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!userProfile) {\n      alert(\"You need to be logged in to post.\");\n      return;\n    }\n    try {\n      const post = {\n        content,\n        tags,\n        user: userProfile.spotifyId // Pass Spotify ID as the user reference\n      };\n      await axios.post('http://localhost:8888/posts', post);\n      setContent('');\n      setTags({\n        artist: '',\n        song: '',\n        album: ''\n      });\n      // Fetch posts again to update the list after posting\n      await fetchPosts();\n    } catch (error) {\n      console.error('Error creating post:', error);\n      alert('Failed to create post');\n    }\n  };\n  const renderPosts = () => {\n    return posts.map(post => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: post.user.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          className: \"mb-2 text-muted\",\n          children: [\"Tags: \", post.tags.artist, \", \", post.tags.song, \", \", post.tags.album]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"middle-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Feed Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"postContent\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"What's on your mind?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Write something...\",\n          value: content,\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"postTags\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Artist\",\n          value: tags.artist,\n          onChange: e => setTags({\n            ...tags,\n            artist: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Song\",\n          value: tags.song,\n          onChange: e => setTags({\n            ...tags,\n            song: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Album\",\n          value: tags.album,\n          onChange: e => setTags({\n            ...tags,\n            album: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), renderPosts()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(FeedPage, \"PUDdPhvfZRcrcMqMJOJL5L6c184=\");\n_c = FeedPage;\nexport default FeedPage;\nvar _c;\n$RefreshReg$(_c, \"FeedPage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Form","Button","Card","axios","jsxDEV","_jsxDEV","FeedPage","userProfile","_s","content","setContent","tags","setTags","artist","song","album","posts","setPosts","fetchPosts","response","get","data","error","console","handleSubmit","e","preventDefault","alert","post","user","spotifyId","renderPosts","map","className","children","Body","Title","displayName","fileName","_jsxFileName","lineNumber","columnNumber","Text","Subtitle","_id","onSubmit","Group","controlId","Label","Control","type","placeholder","value","onChange","target","variant","_c","$RefreshReg$"],"sources":["C:/Users/Dylan Karrass/Desktop/harmonize/client/src/FeedPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Form, Button, Card } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nfunction FeedPage({ userProfile }) {\r\n    const [content, setContent] = useState('');\r\n    const [tags, setTags] = useState({ artist: '', song: '', album: '' });\r\n    const [posts, setPosts] = useState([]); // State to store fetched posts\r\n  \r\n    // Fetch posts from backend when component mounts\r\n    useEffect(() => {\r\n      const fetchPosts = async () => {\r\n        try {\r\n          const response = await axios.get('http://localhost:8888/posts');\r\n          setPosts(response.data); // Set fetched posts to state\r\n        } catch (error) {\r\n          console.error('Error fetching posts:', error);\r\n        }\r\n      };\r\n      fetchPosts();\r\n    }, []); // Empty dependency array means this effect runs once on mount\r\n  \r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      if (!userProfile) {\r\n        alert(\"You need to be logged in to post.\");\r\n        return;\r\n      }\r\n      try {\r\n        const post = {\r\n          content,\r\n          tags,\r\n          user: userProfile.spotifyId // Pass Spotify ID as the user reference\r\n        };\r\n        await axios.post('http://localhost:8888/posts', post);\r\n        setContent('');\r\n        setTags({ artist: '', song: '', album: '' });\r\n        // Fetch posts again to update the list after posting\r\n        await fetchPosts();\r\n      } catch (error) {\r\n        console.error('Error creating post:', error);\r\n        alert('Failed to create post');\r\n      }\r\n    };\r\n  \r\n    const renderPosts = () => {\r\n        return posts.map((post) => (\r\n          <Card key={post._id} className=\"mb-3\">\r\n            <Card.Body>\r\n              <Card.Title>{post.user.displayName}</Card.Title>\r\n              <Card.Text>{post.content}</Card.Text>\r\n              <Card.Subtitle className=\"mb-2 text-muted\">Tags: {post.tags.artist}, {post.tags.song}, {post.tags.album}</Card.Subtitle>\r\n              {/* Add buttons for likes and replies here if needed */}\r\n            </Card.Body>\r\n          </Card>\r\n        ));\r\n      };\r\n  \r\n  \r\n  return (\r\n    <Container className=\"middle-content\">\r\n      <h1>Feed Page</h1>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"mb-3\" controlId=\"postContent\">\r\n          <Form.Label>What's on your mind?</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Write something...\"\r\n            value={content}\r\n            onChange={e => setContent(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"postTags\">\r\n          <Form.Label>Tags</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Artist\"\r\n            value={tags.artist}\r\n            onChange={e => setTags({ ...tags, artist: e.target.value })}\r\n          />\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Song\"\r\n            value={tags.song}\r\n            onChange={e => setTags({ ...tags, song: e.target.value })}\r\n          />\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Album\"\r\n            value={tags.album}\r\n            onChange={e => setTags({ ...tags, album: e.target.value })}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Post\r\n        </Button>\r\n      </Form>\r\n      {renderPosts()}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default FeedPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}