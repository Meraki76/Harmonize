{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dylan Karrass\\\\Desktop\\\\harmonize\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Import necessary modules and components from React, Bootstrap, Spotify API, Axios, and local files.\nimport React, { useEffect, useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\n// Import custom components that define different pages and UI parts.\nimport Dashboard from \"./Dashboard\";\nimport Sidebar from \"./Sidebar\";\nimport SearchBar from \"./SearchBar\";\nimport ProfilePage from \"./ProfilePage\";\nimport FeedPage from \"./FeedPage\";\nimport FriendsPage from \"./FriendsPage\";\nimport ChatRoom from \"./ChatRoom\";\n\n// Context for sharing search functionality across components.\nimport { SearchProvider } from \"./SearchContext\";\n\n// Import global styles for the app.\nimport \"./App.css\";\n\n// Initialize Spotify API handler.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi();\n\n// Function to extract the Spotify token from URL hash. Used during initial login.\nconst getTokenFromUrl = () => {\n  return window.location.hash.substring(1).split(\"&\").reduce((initial, item) => {\n    let parts = item.split(\"=\");\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n    return initial;\n  }, {});\n};\nfunction App() {\n  _s();\n  // State hooks for user profile, Spotify token, refresh token, expiry time, and login status.\n  const [userProfile, setUserProfile] = useState(null);\n  const [spotifyToken, setSpotifyToken] = useState(\"\");\n  const [refreshToken, setRefreshToken] = useState(\"\");\n  const [expiresIn, setExpiresIn] = useState(0);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  // Logout function to clear user-related state.\n  const logout = () => {\n    setUserProfile(null);\n    setSpotifyToken(\"\");\n    setRefreshToken(\"\");\n    setLoggedIn(false);\n  };\n\n  // Effect hook to handle authentication and fetching user data from Spotify.\n  useEffect(() => {\n    const {\n      access_token,\n      refresh_token,\n      expires_in,\n      userId\n    } = getTokenFromUrl();\n    window.history.pushState({}, document.title, \"/\");\n    if (access_token) {\n      setSpotifyToken(access_token);\n      setRefreshToken(refresh_token);\n      setExpiresIn(expires_in);\n      spotifyApi.setAccessToken(access_token);\n\n      // Fetch user profile from Spotify and update state.\n      spotifyApi.getMe().then(user => {\n        var _user$images$;\n        setUserProfile({\n          userId: userId,\n          spotifyId: user.id,\n          displayName: user.display_name,\n          email: user.email,\n          profileImage: ((_user$images$ = user.images[0]) === null || _user$images$ === void 0 ? void 0 : _user$images$.url) || \"\"\n        });\n      });\n      setLoggedIn(true);\n    }\n  }, []);\n\n  // Effect hook to handle automatic token refresh.\n  useEffect(() => {\n    if (!refreshToken || !expiresIn) return;\n    const interval = setInterval(() => {\n      axios.get(\"http://localhost:8888/refresh_token\", {\n        params: {\n          refresh_token: refreshToken\n        }\n      }).then(response => {\n        setSpotifyToken(response.data.access_token);\n        spotifyApi.setAccessToken(response.data.access_token);\n      }).catch(err => {\n        console.error(err);\n      });\n    }, (expiresIn - 60) * 1000); // Refresh token 1 minute before expiry.\n\n    return () => clearInterval(interval);\n  }, [refreshToken, expiresIn]);\n\n  // Render the main app structure with routes and layout.\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      style: {\n        minHeight: \"100vh\",\n        backgroundColor: \"#282c34\"\n      },\n      children: !loggedIn ?\n      /*#__PURE__*/\n      // Display a login screen if not logged in.\n      _jsxDEV(Container, {\n        className: \"d-flex justify-content-center align-items-center\",\n        style: {\n          minHeight: \"100vh\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              marginBottom: \"2rem\",\n              color: \"#1DB954\",\n              fontSize: \"3rem\"\n            },\n            children: \"Harmonize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginBottom: \"2rem\",\n              color: \"white\",\n              maxWidth: \"400px\"\n            },\n            children: \"Your Spotify account will be used as an account on Harmonize.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"btn btn-success btn-lg\",\n            href: \"http://localhost:8888/login\",\n            children: \"Login to Spotify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // Main app interface if logged in.\n      _jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          minHeight: \"100vh\",\n          backgroundColor: \"#282c34\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n          userProfile: userProfile,\n          onLogout: logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SearchProvider, {\n          children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/profile/:displayName\",\n              element: /*#__PURE__*/_jsxDEV(ProfilePage, {\n                userProfile: userProfile\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(FeedPage, {\n                userProfile: userProfile\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/friends\",\n              element: /*#__PURE__*/_jsxDEV(FriendsPage, {\n                userProfile: userProfile\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/chat/:conversationId\",\n              element: /*#__PURE__*/_jsxDEV(ChatRoom, {\n                userProfile: userProfile\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n          spotifyApi: spotifyApi,\n          spotifyToken: spotifyToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"I45HqcU5vIUa65BjuFLHVWgWWEo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Container","SpotifyWebApi","axios","BrowserRouter","Router","Route","Routes","Dashboard","Sidebar","SearchBar","ProfilePage","FeedPage","FriendsPage","ChatRoom","SearchProvider","jsxDEV","_jsxDEV","spotifyApi","getTokenFromUrl","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","App","_s","userProfile","setUserProfile","spotifyToken","setSpotifyToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","loggedIn","setLoggedIn","logout","access_token","refresh_token","expires_in","userId","history","pushState","document","title","setAccessToken","getMe","then","user","_user$images$","spotifyId","id","displayName","display_name","email","profileImage","images","url","interval","setInterval","get","params","response","data","catch","err","console","error","clearInterval","children","className","style","minHeight","backgroundColor","textAlign","marginBottom","color","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","href","display","onLogout","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Dylan Karrass/Desktop/harmonize/client/src/App.js"],"sourcesContent":["// Import necessary modules and components from React, Bootstrap, Spotify API, Axios, and local files.\nimport React, { useEffect, useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\n// Import custom components that define different pages and UI parts.\nimport Dashboard from \"./Dashboard\";\nimport Sidebar from \"./Sidebar\";\nimport SearchBar from \"./SearchBar\";\nimport ProfilePage from \"./ProfilePage\";\nimport FeedPage from \"./FeedPage\";\nimport FriendsPage from \"./FriendsPage\";\nimport ChatRoom from \"./ChatRoom\";\n\n// Context for sharing search functionality across components.\nimport { SearchProvider } from \"./SearchContext\";\n\n// Import global styles for the app.\nimport \"./App.css\";\n\n// Initialize Spotify API handler.\nconst spotifyApi = new SpotifyWebApi();\n\n// Function to extract the Spotify token from URL hash. Used during initial login.\nconst getTokenFromUrl = () => {\n  return window.location.hash\n    .substring(1)\n    .split(\"&\")\n    .reduce((initial, item) => {\n      let parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n      return initial;\n    }, {});\n};\n\nfunction App() {\n  // State hooks for user profile, Spotify token, refresh token, expiry time, and login status.\n  const [userProfile, setUserProfile] = useState(null);\n  const [spotifyToken, setSpotifyToken] = useState(\"\");\n  const [refreshToken, setRefreshToken] = useState(\"\");\n  const [expiresIn, setExpiresIn] = useState(0);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  // Logout function to clear user-related state.\n  const logout = () => {\n    setUserProfile(null);\n    setSpotifyToken(\"\");\n    setRefreshToken(\"\");\n    setLoggedIn(false);\n  };\n\n  // Effect hook to handle authentication and fetching user data from Spotify.\n  useEffect(() => {\n    const { access_token, refresh_token, expires_in, userId } =\n      getTokenFromUrl();\n    window.history.pushState({}, document.title, \"/\");\n    if (access_token) {\n      setSpotifyToken(access_token);\n      setRefreshToken(refresh_token);\n      setExpiresIn(expires_in);\n      spotifyApi.setAccessToken(access_token);\n\n      // Fetch user profile from Spotify and update state.\n      spotifyApi.getMe().then((user) => {\n        setUserProfile({\n          userId: userId,\n          spotifyId: user.id,\n          displayName: user.display_name,\n          email: user.email,\n          profileImage: user.images[0]?.url || \"\",\n        });\n      });\n      setLoggedIn(true);\n    }\n  }, []);\n\n  // Effect hook to handle automatic token refresh.\n  useEffect(() => {\n    if (!refreshToken || !expiresIn) return;\n    const interval = setInterval(\n      () => {\n        axios\n          .get(\"http://localhost:8888/refresh_token\", {\n            params: { refresh_token: refreshToken },\n          })\n          .then((response) => {\n            setSpotifyToken(response.data.access_token);\n            spotifyApi.setAccessToken(response.data.access_token);\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n      },\n      (expiresIn - 60) * 1000,\n    ); // Refresh token 1 minute before expiry.\n\n    return () => clearInterval(interval);\n  }, [refreshToken, expiresIn]);\n\n  // Render the main app structure with routes and layout.\n  return (\n    <Router>\n      <div\n        className=\"App\"\n        style={{ minHeight: \"100vh\", backgroundColor: \"#282c34\" }}\n      >\n        {!loggedIn ? (\n          // Display a login screen if not logged in.\n          <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{ minHeight: \"100vh\" }}\n          >\n            <div style={{ textAlign: \"center\" }}>\n              <h1\n                style={{\n                  marginBottom: \"2rem\",\n                  color: \"#1DB954\",\n                  fontSize: \"3rem\",\n                }}\n              >\n                Harmonize\n              </h1>\n              <p\n                style={{\n                  marginBottom: \"2rem\",\n                  color: \"white\",\n                  maxWidth: \"400px\",\n                }}\n              >\n                Your Spotify account will be used as an account on Harmonize.\n              </p>\n              <a\n                className=\"btn btn-success btn-lg\"\n                href=\"http://localhost:8888/login\"\n              >\n                Login to Spotify\n              </a>\n            </div>\n          </Container>\n        ) : (\n          // Main app interface if logged in.\n          <div\n            style={{\n              display: \"flex\",\n              minHeight: \"100vh\",\n              backgroundColor: \"#282c34\",\n            }}\n          >\n            <Sidebar userProfile={userProfile} onLogout={logout} />\n            <SearchProvider>\n              <SearchBar />\n              <Routes>\n                <Route\n                  path=\"/profile/:displayName\"\n                  element={<ProfilePage userProfile={userProfile} />}\n                />\n                <Route\n                  path=\"/\"\n                  element={<FeedPage userProfile={userProfile} />}\n                />\n                <Route\n                  path=\"/friends\"\n                  element={<FriendsPage userProfile={userProfile} />}\n                />\n                <Route\n                  path=\"/chat/:conversationId\"\n                  element={<ChatRoom userProfile={userProfile} />}\n                />\n              </Routes>\n            </SearchProvider>\n            <Dashboard spotifyApi={spotifyApi} spotifyToken={spotifyToken} />\n          </div>\n        )}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}