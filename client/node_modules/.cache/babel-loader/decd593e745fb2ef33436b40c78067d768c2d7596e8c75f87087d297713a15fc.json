{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dylan Karrass\\\\Desktop\\\\harmonize\\\\client\\\\src\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MessageContext } from './MessageContext'; // Ensure the path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatRoom() {\n  _s();\n  const {\n    conversationId\n  } = useParams(); // Assuming route is like /chat/:conversationId\n  const {\n    currentConversation,\n    sendMessage,\n    user\n  } = useContext(MessageContext);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const messagesEndRef = useRef(null);\n\n  // Auto-scroll to the latest message only when a new message is added to the conversation\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [currentConversation === null || currentConversation === void 0 ? void 0 : currentConversation.messages.length]);\n  const handleSendMessage = () => {\n    if (newMessage.trim() !== \"\") {\n      sendMessage({\n        message: newMessage,\n        senderId: user.userId,\n        conversationId\n      });\n      setNewMessage(\"\");\n    }\n  };\n  if (!currentConversation) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"middle-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No Conversation Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select a conversation to start chatting.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"middle-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Chat with \", currentConversation.otherUserDisplayName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [currentConversation.messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender === user.userId ? 'sent' : 'received'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: msg.sender === user.userId ? user.profileImage : currentConversation.otherUserProfileImage,\n          alt: \"Profile\",\n          className: \"profile-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value),\n      placeholder: \"Type a message...\",\n      className: \"message-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      className: \"send-button\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatRoom, \"S/83AXXgWosc+K30x9xTG9g9ApA=\", false, function () {\n  return [useParams];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useRef","useParams","MessageContext","jsxDEV","_jsxDEV","ChatRoom","_s","conversationId","currentConversation","sendMessage","user","newMessage","setNewMessage","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","messages","length","handleSendMessage","trim","message","senderId","userId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","otherUserDisplayName","map","msg","index","sender","src","profileImage","otherUserProfileImage","alt","text","ref","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dylan Karrass/Desktop/harmonize/client/src/ChatRoom.js"],"sourcesContent":["import React, { useContext, useEffect, useState, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { MessageContext } from './MessageContext';  // Ensure the path is correct\r\n\r\nfunction ChatRoom() {\r\n    const { conversationId } = useParams();  // Assuming route is like /chat/:conversationId\r\n    const { currentConversation, sendMessage, user } = useContext(MessageContext);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const messagesEndRef = useRef(null);\r\n\r\n    // Auto-scroll to the latest message only when a new message is added to the conversation\r\n    useEffect(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [currentConversation?.messages.length]);\r\n\r\n    const handleSendMessage = () => {\r\n        if (newMessage.trim() !== \"\") {\r\n            sendMessage({ message: newMessage, senderId: user.userId, conversationId });\r\n            setNewMessage(\"\");\r\n        }\r\n    };\r\n\r\n    if (!currentConversation) {\r\n        return (\r\n            <div className=\"middle-content\">\r\n                <h1>No Conversation Selected</h1>\r\n                <p>Please select a conversation to start chatting.</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"middle-content\">\r\n            <h1>Chat with {currentConversation.otherUserDisplayName}</h1>\r\n            <div className=\"messages\">\r\n                {currentConversation.messages.map((msg, index) => (\r\n                    <div key={index} className={`message ${msg.sender === user.userId ? 'sent' : 'received'}`}>\r\n                        <img src={msg.sender === user.userId ? user.profileImage : currentConversation.otherUserProfileImage} alt=\"Profile\" className=\"profile-image\"/>\r\n                        <p>{msg.text}</p>\r\n                    </div>\r\n                ))}\r\n                <div ref={messagesEndRef} />\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n                placeholder=\"Type a message...\"\r\n                className=\"message-input\"\r\n            />\r\n            <button onClick={handleSendMessage} className=\"send-button\">Send</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatRoom;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACtE,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,cAAc,QAAQ,kBAAkB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAe,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAE;EACzC,MAAM;IAAEO,mBAAmB;IAAEC,WAAW;IAAEC;EAAK,CAAC,GAAGb,UAAU,CAACK,cAAc,CAAC;EAC7E,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMc,cAAc,GAAGb,MAAM,CAAC,IAAI,CAAC;;EAEnC;EACAF,SAAS,CAAC,MAAM;IAAA,IAAAgB,qBAAA;IACZ,CAAAA,qBAAA,GAAAD,cAAc,CAACE,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAClE,CAAC,EAAE,CAACT,mBAAmB,aAAnBA,mBAAmB,uBAAnBA,mBAAmB,CAAEU,QAAQ,CAACC,MAAM,CAAC,CAAC;EAE1C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAIT,UAAU,CAACU,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC1BZ,WAAW,CAAC;QAAEa,OAAO,EAAEX,UAAU;QAAEY,QAAQ,EAAEb,IAAI,CAACc,MAAM;QAAEjB;MAAe,CAAC,CAAC;MAC3EK,aAAa,CAAC,EAAE,CAAC;IACrB;EACJ,CAAC;EAED,IAAI,CAACJ,mBAAmB,EAAE;IACtB,oBACIJ,OAAA;MAAKqB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3BtB,OAAA;QAAAsB,QAAA,EAAI;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjC1B,OAAA;QAAAsB,QAAA,EAAG;MAA+C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAEd;EAEA,oBACI1B,OAAA;IAAKqB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BtB,OAAA;MAAAsB,QAAA,GAAI,YAAU,EAAClB,mBAAmB,CAACuB,oBAAoB;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7D1B,OAAA;MAAKqB,SAAS,EAAC,UAAU;MAAAC,QAAA,GACpBlB,mBAAmB,CAACU,QAAQ,CAACc,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACzC9B,OAAA;QAAiBqB,SAAS,EAAG,WAAUQ,GAAG,CAACE,MAAM,KAAKzB,IAAI,CAACc,MAAM,GAAG,MAAM,GAAG,UAAW,EAAE;QAAAE,QAAA,gBACtFtB,OAAA;UAAKgC,GAAG,EAAEH,GAAG,CAACE,MAAM,KAAKzB,IAAI,CAACc,MAAM,GAAGd,IAAI,CAAC2B,YAAY,GAAG7B,mBAAmB,CAAC8B,qBAAsB;UAACC,GAAG,EAAC,SAAS;UAACd,SAAS,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC/I1B,OAAA;UAAAsB,QAAA,EAAIO,GAAG,CAACO;QAAI;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFXI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACR,CAAC,eACF1B,OAAA;QAAKqC,GAAG,EAAE5B;MAAe;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACN1B,OAAA;MACIsC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEhC,UAAW;MAClBiC,QAAQ,EAAGC,CAAC,IAAKjC,aAAa,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,WAAW,EAAC,mBAAmB;MAC/BtB,SAAS,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACF1B,OAAA;MAAQ4C,OAAO,EAAE5B,iBAAkB;MAACK,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEd;AAACxB,EAAA,CAjDQD,QAAQ;EAAA,QACcJ,SAAS;AAAA;AAAAgD,EAAA,GAD/B5C,QAAQ;AAmDjB,eAAeA,QAAQ;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}