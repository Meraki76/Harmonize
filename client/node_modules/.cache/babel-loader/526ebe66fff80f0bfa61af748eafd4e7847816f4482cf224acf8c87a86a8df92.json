{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dylan Karrass\\\\Desktop\\\\harmonize\\\\client\\\\src\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MessageContext } from './MessageContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatRoom() {\n  _s();\n  const {\n    conversationId\n  } = useParams();\n  const {\n    conversations,\n    sendMessage,\n    selectConversation\n  } = useContext(MessageContext);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  const conversation = conversations.find(c => c._id === conversationId);\n\n  // Auto-scroll to the latest message\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [conversation === null || conversation === void 0 ? void 0 : conversation.messages.length]);\n  useEffect(() => {\n    // If the conversation is not already set in context, try to select it.\n    if (!conversation) {\n      selectConversation(conversationId);\n    }\n  }, [conversationId, selectConversation, conversation]);\n  const handleSendMessage = () => {\n    if (newMessage.trim() !== \"\") {\n      sendMessage({\n        message: newMessage,\n        to: conversationId\n      });\n      setNewMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"middle-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Chat with \", (conversation === null || conversation === void 0 ? void 0 : conversation.otherUserDisplayName) || \"User\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), conversation ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: [conversation.messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.senderId === conversation.userId ? 'sent' : 'received'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: msg.senderId === conversation.userId ? conversation.userProfileImage : conversation.otherUserProfileImage,\n            alt: \"Profile\",\n            className: \"profile-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\",\n        className: \"message-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading conversation or start a new chat...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatRoom, \"2v2qi0hj5jKsjN9/eCfW5AFzSwk=\", false, function () {\n  return [useParams];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useRef","useParams","MessageContext","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatRoom","_s","conversationId","conversations","sendMessage","selectConversation","newMessage","setNewMessage","messagesEndRef","conversation","find","c","_id","_messagesEndRef$curre","current","scrollIntoView","behavior","messages","length","handleSendMessage","trim","message","to","className","children","otherUserDisplayName","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","senderId","userId","src","userProfileImage","otherUserProfileImage","alt","text","ref","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dylan Karrass/Desktop/harmonize/client/src/ChatRoom.js"],"sourcesContent":["import React, { useContext, useEffect, useState, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { MessageContext } from './MessageContext'; \r\n\r\nfunction ChatRoom() {\r\n    const { conversationId } = useParams();\r\n    const { conversations, sendMessage, selectConversation } = useContext(MessageContext);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const messagesEndRef = useRef(null);\r\n    const conversation = conversations.find(c => c._id === conversationId);\r\n\r\n    // Auto-scroll to the latest message\r\n    useEffect(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [conversation?.messages.length]);\r\n\r\n    useEffect(() => {\r\n        // If the conversation is not already set in context, try to select it.\r\n        if (!conversation) {\r\n            selectConversation(conversationId);\r\n        }\r\n    }, [conversationId, selectConversation, conversation]);\r\n\r\n    const handleSendMessage = () => {\r\n        if (newMessage.trim() !== \"\") {\r\n            sendMessage({ message: newMessage, to: conversationId });\r\n            setNewMessage(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"middle-content\">\r\n            <h1>Chat with {conversation?.otherUserDisplayName || \"User\"}</h1>\r\n            {conversation ? (\r\n                <>\r\n                    <div className=\"messages\">\r\n                        {conversation.messages.map((msg, index) => (\r\n                            <div key={index} className={`message ${msg.senderId === conversation.userId ? 'sent' : 'received'}`}>\r\n                                <img src={msg.senderId === conversation.userId ? conversation.userProfileImage : conversation.otherUserProfileImage} alt=\"Profile\" className=\"profile-image\"/>\r\n                                <p>{msg.text}</p>\r\n                            </div>\r\n                        ))}\r\n                        <div ref={messagesEndRef} />\r\n                    </div>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={newMessage}\r\n                        onChange={(e) => setNewMessage(e.target.value)}\r\n                        placeholder=\"Type a message...\"\r\n                        className=\"message-input\"\r\n                    />\r\n                    <button onClick={handleSendMessage} className=\"send-button\">Send</button>\r\n                </>\r\n            ) : (\r\n                <p>Loading conversation or start a new chat...</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}