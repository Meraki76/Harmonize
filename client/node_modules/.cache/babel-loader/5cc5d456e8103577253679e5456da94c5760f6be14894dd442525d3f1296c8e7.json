{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dylan Karrass\\\\Desktop\\\\harmonize\\\\client\\\\src\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MessageContext } from './MessageContext';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatRoom() {\n  _s();\n  const {\n    conversationId\n  } = useParams();\n  const {\n    setCurrentConversation\n  } = useContext(MessageContext);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    // Connect to Socket.IO server\n    const newSocket = io('http://localhost:8888');\n    setSocket(newSocket);\n    return () => newSocket.close();\n  }, [setSocket]);\n\n  // Find the current conversation based on the conversationId\n  const conversation = conversations.find(c => c._id === conversationId);\n  console.log(conversations, conversationId, conversation);\n  // Set up socket listeners once on component mount\n  useEffect(() => {\n    if (socket && conversation) {\n      socket.on('receiveMessage', message => {\n        if (message.conversationId === conversationId) {\n          // Update the conversation messages here\n          selectConversation(conversationId); // Refresh or modify to update UI\n        }\n      });\n    }\n  }, [socket, conversationId, selectConversation, conversation]);\n\n  // Auto-scroll to the latest message\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [conversation === null || conversation === void 0 ? void 0 : conversation.messages.length]);\n  const handleSendMessage = () => {\n    if (newMessage.trim() !== \"\") {\n      // Send message using socket\n      socket.emit('sendMessage', {\n        senderId: 'yourSenderId',\n        // Obtain from context or state\n        receiverId: 'otherUserId',\n        // Obtain from context or props\n        text: newMessage,\n        conversationId: conversationId\n      });\n      setNewMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"middle-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Chat with \", (conversation === null || conversation === void 0 ? void 0 : conversation.otherUserDisplayName) || \"User\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), conversation ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: [conversation.messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.senderId === 'yourSenderId' ? 'sent' : 'received'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: msg.senderId === 'yourSenderId' ? 'yourProfileImage' : 'otherUserProfileImage',\n            alt: \"Profile\",\n            className: \"profile-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\",\n        className: \"message-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading conversation or start a new chat...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatRoom, \"o6TlgiWRhLW6QNxvdAFOrvBg7CQ=\", false, function () {\n  return [useParams];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useRef","useParams","MessageContext","io","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatRoom","_s","conversationId","setCurrentConversation","newMessage","setNewMessage","messagesEndRef","socket","setSocket","newSocket","close","conversation","conversations","find","c","_id","console","log","on","message","selectConversation","_messagesEndRef$curre","current","scrollIntoView","behavior","messages","length","handleSendMessage","trim","emit","senderId","receiverId","text","className","children","otherUserDisplayName","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","src","alt","ref","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dylan Karrass/Desktop/harmonize/client/src/ChatRoom.js"],"sourcesContent":["import React, { useContext, useEffect, useState, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { MessageContext } from './MessageContext';\r\nimport io from 'socket.io-client';\r\n\r\nfunction ChatRoom() {\r\n    const { conversationId } = useParams();\r\n    const { setCurrentConversation } = useContext(MessageContext);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const messagesEndRef = useRef(null);\r\n    const [socket, setSocket] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        // Connect to Socket.IO server\r\n        const newSocket = io('http://localhost:8888');\r\n        setSocket(newSocket);\r\n        return () => newSocket.close();\r\n    }, [setSocket]);\r\n\r\n    // Find the current conversation based on the conversationId\r\n    const conversation = conversations.find(c => c._id === conversationId);\r\n    console.log(conversations, conversationId, conversation);\r\n    // Set up socket listeners once on component mount\r\n    useEffect(() => {\r\n        if (socket && conversation) {\r\n            socket.on('receiveMessage', (message) => {\r\n                if (message.conversationId === conversationId) {\r\n                    // Update the conversation messages here\r\n                    selectConversation(conversationId); // Refresh or modify to update UI\r\n                }\r\n            });\r\n        }\r\n    }, [socket, conversationId, selectConversation, conversation]);\r\n\r\n    // Auto-scroll to the latest message\r\n    useEffect(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [conversation?.messages.length]);\r\n\r\n    const handleSendMessage = () => {\r\n        if (newMessage.trim() !== \"\") {\r\n            // Send message using socket\r\n            socket.emit('sendMessage', {\r\n                senderId: 'yourSenderId', // Obtain from context or state\r\n                receiverId: 'otherUserId', // Obtain from context or props\r\n                text: newMessage,\r\n                conversationId: conversationId\r\n            });\r\n            setNewMessage(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"middle-content\">\r\n            <h1>Chat with {conversation?.otherUserDisplayName || \"User\"}</h1>\r\n            {conversation ? (\r\n                <>\r\n                    <div className=\"messages\">\r\n                        {conversation.messages.map((msg, index) => (\r\n                            <div key={index} className={`message ${msg.senderId === 'yourSenderId' ? 'sent' : 'received'}`}>\r\n                                <img src={msg.senderId === 'yourSenderId' ? 'yourProfileImage' : 'otherUserProfileImage'} alt=\"Profile\" className=\"profile-image\"/>\r\n                                <p>{msg.text}</p>\r\n                            </div>\r\n                        ))}\r\n                        <div ref={messagesEndRef} />\r\n                    </div>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={newMessage}\r\n                        onChange={(e) => setNewMessage(e.target.value)}\r\n                        placeholder=\"Type a message...\"\r\n                        className=\"message-input\"\r\n                    />\r\n                    <button onClick={handleSendMessage} className=\"send-button\">Send</button>\r\n                </>\r\n            ) : (\r\n                <p>Loading conversation or start a new chat...</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}